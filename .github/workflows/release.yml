name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Build (release)
        run: cargo build --release --locked

      - name: Prepare dist dir
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p dist
          case "${{ runner.os }}" in
            Linux)
              strip target/release/llm_log_viewer || true
              cp target/release/llm_log_viewer dist/
              ;;
            macOS)
              strip -x target/release/llm_log_viewer || true
              cp target/release/llm_log_viewer dist/
              ;;
            Windows)
              cp target/release/llm_log_viewer.exe dist/
              ;;
          esac

      - name: Archive artifact
        shell: bash
        run: |
          set -euxo pipefail
          cd dist
          case "${{ runner.os }}" in
            Linux)
              zip -9 "llm_log_viewer-${{ runner.os }}-x86_64.zip" llm_log_viewer || 7z a "llm_log_viewer-${{ runner.os }}-x86_64.zip" llm_log_viewer
              ;;
            macOS)
              zip -9 "llm_log_viewer-macOS-x86_64.zip" llm_log_viewer || 7z a "llm_log_viewer-macOS-x86_64.zip" llm_log_viewer
              ;;
            Windows)
              7z a "llm_log_viewer-Windows-x86_64.zip" llm_log_viewer.exe
              ;;
          esac

      - name: Upload artifact (workflow run)
        uses: actions/upload-artifact@v4
        with:
          name: llm_log_viewer-${{ runner.os }}-x86_64
          path: dist/*.zip

  release:
    name: Attach assets to GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/**/**/*.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

